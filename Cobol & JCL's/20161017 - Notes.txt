Any Questions / Queries / Doubt on the following -
1) Sequential File Handling
   - SELECT Statement
   - FD Entry
   - OPEN Statement
   - READ Statement; AT END Clause; NOT AT END Clause
   - CLOSE Statement
2) Usage of COBOL Verbs learnt so far - PERFORM, IF ELSE END-IF, EVALUATE,
MOVE, Arithmatic Verbs (ADD, SUBTRACT, MULTIPLY, DIVIDE, COMPUTE) with ROUNDED and ON SIZE ERROR Clause.
+++++++++++++++++++++++++++++++++
ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT EMPLOYEE-FILE ASSIGN TO 'EMPLOYEE.DAT'
	ORGANIZATION IS SEQUENTIAL
	ACCESS MODE  IS SEQUENTIAL
	FILE STATUS  IS WS-FILE-STAT.
DATA DIVISION.
FILE SECTION.
FD  EMPLOYEE-FILE
    RECORD CONTAINS 50 CHARACTERS
    RECORDING MODE IS F.
01  EMPLOYEE-RECORD	PIC X(50).
WORKING-STORAGE SECTION.
01  WS-FILE-STAT	PIC X(02).
    88  FILE-SUCCESS	VALUE '00'.
    88  END-OF-FILE	VALUE '10'.
PROCEDURE DIVISION.
MAIN-PARA.
    OPEN INPUT EMPLOYEE-FILE
    IF FILE-SUCCESS
 	DISPLAY 'FILE OPENED SUCCESSFULLY'
    ELSE
 	DISPLAY 'ERROR OPENING FILE'
    END-IF
    PERFORM  UNTIL  END-OF-FILE
	READ EMPLOYEE-FILE
	   IF FILE-SUCCESS
		ADD 1 TO RECS-READ
		DISPLAY 'DETAIL ', EMPLOYEE-RECORD
	   ELSE
		DISPLAY 'ERROR READING FILE'
	   END-IF
	END-READ
    END-PERFORM
    DISPLAY 'TOTAL EMPLOYEES ', RECS-READ
    DISPLAY 'END OF FILE REACHED'
    CLOSE EMPLOYEE-FILE
    STOP RUN.
+++++++++++++
FD  EMPLOYEE-FILE.
01  EMPLOYEE-RECORD	PIC X(50).
WORKING-STORAGE SECTION.
01  WS-EMP-RECORD	PIC X(50).
PROCEDURE DIVISION.
MAIN-PARA.
    MOVE WS-EMP-RECORD TO EMPLOYEE-RECORD
    WRITE EMPLOYEE-RECORD

    WRITE EMPLOYEE-RECORD FROM WS-EMP-RECORD
====================================================================
New Program Specifications =
1) Read the Employee Records sequentially from the Employee File
2) The Employee Details are to be printed as a Report using the Page Break Logic (10 Lines per Page). The format of the Report is given below.

DATE: DD/MM/YYYY					TIME: HH:MM:SS
LISTING OF EMPLOYEES					PAGE: Z9

ID    EMP NAME     LOC BIRTH DATE   EARNINGS DEDUCTIONS  TOTAL SAL		
10001 EMP NAME - 1 PUN DD/MM/YYYY  ZZ,ZZ9.99  ZZ,ZZ9.99  ZZ,ZZ9.99
20002 EMP NAME - 2 PUN DD/MM/YYYY  ZZ,ZZ9.99  ZZ,ZZ9.99  ZZ,ZZ9.99
30003 EMP NAME - 3 PUN DD/MM/YYYY  ZZ,ZZ9.99  ZZ,ZZ9.99  ZZ,ZZ9.99

DATE: DD/MM/YYYY					TIME: HH:MM:SS
LISTING OF EMPLOYEES					PAGE: Z9

ID    EMP NAME     LOC BIRTH DATE   EARNINGS DEDUCTIONS  TOTAL SAL		
10001 EMP NAME - 1 PUN DD/MM/YYYY  ZZ,ZZ9.99  ZZ,ZZ9.99  ZZ,ZZ9.99
20002 EMP NAME - 2 PUN DD/MM/YYYY  ZZ,ZZ9.99  ZZ,ZZ9.99  ZZ,ZZ9.99
30003 EMP NAME - 3 PUN DD/MM/YYYY  ZZ,ZZ9.99  ZZ,ZZ9.99  ZZ,ZZ9.99

DATE: DD/MM/YYYY					TIME: HH:MM:SS
EMPLOYEE TOTALS						PAGE: Z9

COMPANY TOTALS	   ZZ9		  ZZZ,ZZ9.99 ZZZ,ZZ9.99 ZZZ,ZZ9.99
=====================================================================
DATE: DD/MM/YYYY					TIME: HH:MM:SS

01  HEADING-LINE1.
    03  FILLER			PIC X(06) VALUE 'DATE:'.
    03  OUT-DATE.
	05  WS-DATE-DD		PIC 9(02) VALUE ZERO.
	05  FILLER		PIC X(01) VALUE '/'.
	05  WS-DATE-MTH		PIC 9(02) VALUE ZERO.
	05  FILLER		PIC X(01) VALUE '/'.
	05  WS-DATE-YR		PIC 9(04) VALUE ZERO.
    03  FILLER			PIC X(50) VALUE SPACES.
    03  FILLER			PIC X(06) VALUE 'TIME:'.
    03  OUT-TIME.
	05  WS-TIME-HR		PIC 9(02) VALUE ZERO.
	05  FILLER		PIC X(01) VALUE ':'.
	05  WS-TIME-MM		PIC 9(02) VALUE ZERO.
	05  FILLER		PIC X(01) VALUE ':'.
	05  WS-TIME-SS		PIC 9(02) VALUE ZERO.

LISTING OF EMPLOYEES					PAGE: 03

01  HEADING-LINE2.
    03  FILLER			PIC X(20) VALUE
	'LISTING OF EMPLOYEES'.
    03  FILLER			PIC X(46) VALUE SPACES.
    03  FILLER			PIC X(06) VALUE 'PAGE:'.
    03  OUT-TIME		PIC Z9 VALUE ZERO.
================
01  DETAIL-LINE.
    03  OUT-EMP-ID		PIC X(05) VALUE SPACES.
    03  FILLER			PIC X(02) VALUE SPACES.
    03  OUT-EMP-NAME		PIC X(20) VALUE SPACES.
    03  FILLER			PIC X(02) VALUE SPACES.
    03  OUT-EMP-CITY		PIC X(03) VALUE SPACES.
    03  FILLER			PIC X(02) VALUE SPACES.
    03  OUT-EMP-DOB.
	05  EMP-DD		PIC 9(02) VALUE ZERO.
	05  FILLER		PIC X(01) VALUE '/'.
	05  EMP-MM		PIC 9(02) VALUE ZERO.
	05  FILLER		PIC X(01) VALUE '/'.
	05  EMP-YR		PIC 9(04) VALUE ZERO.
    03  FILLER			PIC X(02) VALUE SPACES.
    03  OUT-EMP-EARN		PIC ZZ,ZZ9.99 VALUE ZERO.
    03  FILLER			PIC X(02) VALUE SPACES.
    03  OUT-EMP-DEDN		PIC ZZ,ZZ9.99 VALUE ZERO.
    03  FILLER			PIC X(02) VALUE SPACES.
    03  OUT-EMP-SAL		PIC ZZ,ZZ9.99 VALUE ZERO.
===================
ID    EMP NAME     LOC BIRTH DATE   EARNINGS DEDUCTIONS  TOTAL SAL
10001 EMP NAME - 1 PUN DD/MM/YYYY  ZZ,ZZ9.99  ZZ,ZZ9.99  ZZ,ZZ9.99

01  HEADING-LINE3.
    03  FILLER			PIC X(07) VALUE 'ID'.
    03  FILLER			PIC X(22) VALUE 'EMP NAME'.
    03  FILLER			PIC X(05) VALUE 'LOC'.
    03  FILLER			PIC X(12) VALUE 'BIRTH DATE'.
    03  FILLER			PIC X(10) VALUE ' EARNINGS'.
    03  FILLER			PIC X(12) VALUE 'DEDUCTIONS'.
    03  FILLER			PIC X(09) VALUE 'TOTAL SAL'.
=================================================================
Run JCL using an Input & Output File =

//DSRP154C JOB CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID
//*-------------------------------------------------------*    
//STEP010  EXEC PGM=IEFBR14                                    
//REPFILE  DD  DSN=DSRP154.AMOGH.COBOL.REPFILE,                
//             DISP=(MOD,DELETE,DELETE),                       
//             DCB=(RECFM=FB,LRECL=81,BLKSIZE=8100),           
//             SPACE=(TRK,(1,1),RLSE)                          
//*-------------------------------------------------------*    
//STEP020  EXEC PGM=PROG5                                      
//STEPLIB  DD  DSN=DSRP154.AMOGH.COBOL.LOADLIB,DISP=SHR        
//EMPFILE  DD  DSN=DSRP154.AMOGH.COBOL.EMPLOYEE,DISP=SHR       
//REPFILE  DD  DSN=DSRP154.AMOGH.COBOL.REPFILE,                
//             DISP=(NEW,CATLG,DELETE),                        
//             DCB=(RECFM=FB,LRECL=81,BLKSIZE=8100),           
//             SPACE=(TRK,(1,1),RLSE)                          
//SYSOUT   DD  SYSOUT=*
+++++++++++++++++++++++
Compile JCL for using the COPY Statement in the COBOL Program =

//DSRP154C JOB CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID
//*-------------------------------------------------------*    
// SET MEMBER=PROG6                        <= COBOL PROGRAM    
// SET SOURCE=DSRP154.AMOGH.COBOL.SOURCE   <= SOURCE LIBRARY   
// SET COPYLIB=DSRP154.AMOGH.COBOL.COPYLIB <= COPY LIBRARY     
// SET LOADLIB=DSRP154.AMOGH.COBOL.LOADLIB <= LOAD LIBRARY     
//*-------------------------------------------------------*    
//COMPILE  EXEC PGM=IGYCRCTL,REGION=2048K,PARM=LIB             
//STEPLIB  DD  DSN=IGY.SIGYCOMP,DISP=SHR                       
//SYSPRINT DD  SYSOUT=*                                        
//SYSLIB   DD  DSN=&COPYLIB,DISP=SHR                           
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))                    
//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))                    
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))                    
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))                    
//SYSUT5   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))                    
//SYSUT6   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))                    
//SYSUT7   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSIN    DD  DSN=&SOURCE(&MEMBER),DISP=SHR                       
//SYSLIN   DD  DSN=&&TEMP,DISP=(NEW,PASS),                         
//             UNIT=SYSDA,SPACE=(TRK,(10,10))                      
//*-------------------------------------------------------*        
//LINKEDIT EXEC PGM=HEWL,REGION=1024K,PARM=XREF,COND=(4,LT,COMPILE)
//SYSLIB   DD  DSN=CEE.SCEELKED,DISP=SHR                           
//SYSPRINT DD  SYSOUT=*                                            
//SYSLIN   DD  DSN=&&TEMP,DISP=(OLD,DELETE)                        
//SYSLMOD  DD  DSN=&LOADLIB(&MEMBER),DISP=SHR                      
//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(10,10))                      
//